{"meta":{"title":"Hexo","subtitle":"","description":"test description","author":"John Doe","url":"http://yoursite.com","root":"/"},"pages":[{"title":"Page","date":"2013-12-26T14:52:56.000Z","updated":"2023-01-27T04:25:53.443Z","comments":true,"path":"page/index.html","permalink":"http://yoursite.com/page/index.html","excerpt":"","text":"This is a page test."},{"title":"","date":"2023-02-12T14:38:36.361Z","updated":"2023-02-12T14:10:47.058Z","comments":true,"path":"HTML/chess.html","permalink":"http://yoursite.com/HTML/chess.html","excerpt":"","text":"Document canvas { display: block; margin: 50px auto; /* background-color: pink; */ box-shadow: -2px -2px 2px #efefef, 5px 5px 5px #b9b9b9; cursor: pointer; /* 悬浮于连接上时，通常为手 */ } .f1 { height: 750px; background-image: url(./bg.jpg); background-repeat: no-repeat; background-size: cover; } .btn-wrap { display: flex; /* 沿水平主轴让元素从左向右排列 */ flex-direction: row; /* 元素在主轴上居中排列 */ justify-content: center; } .btn-wrap div { margin: 0 70px; } div > span { display: inline-block; padding: 10px 20px; color: #fff; background-color: skyblue; border-radius: 5px; cursor: pointer; } div.unable span { background: #d6d6d4; color: #adacaa; } #result-wrap { text-align: center; } #shit { text-align: center; font-size: 4px; } ---五子棋--- 重新开始 选择悔棋 alert( '勇敢的少年，你即将开启一段神奇的博弈之旅！五子相连即可拥有无穷的力量' ); var over = false; var me = true; //我 var resultTxt = document.getElementById('result-wrap'); var chressBord = []; //棋盘 for (var i = 0; i < 15; i++) { chressBord[i] = []; for (var j = 0; j < 15; j++) { chressBord[i][j] = 0; //将每个交点赋值为0 } } var _nowi = 0, _nowj = 0; //记录自己下棋的坐标 var _compi = 0, _compj = 0; //记录计算机当前下棋的坐标 var _myWin = [], _compWin = []; //记录我，计算机赢的情况 var backbtn = document.getElementById('goback'); var backAble = false, returnAble = false; var chess = document.getElementById('chess'); var context = chess.getContext('2d'); context.strokeStyle = '#000'; //边框颜色 window.onload = function () { drawChessBoard(); // 画棋盘 }; document.getElementById('restart').onclick = function () { window.location.reload(); }; //赢法的数组统计 var myWin = []; var computerWin = []; //赢法数组 var wins = []; for (var row = 0; row < 15; row++) { //创建15行 wins[row] = []; for (var col = 0; col < 15; col++) { //每一行创建15列 wins[row][col] = []; } } var count = 0; //共有多少中赢法 //水平方法赢法统计 for (var row = 0; row < 15; row++) { //获取行数 for (var col = 0; col < 11; col++) { //获取当前行的列数 for (var k = 0; k < 5; k++) { //数五颗棋子 wins[row][col + k][count] = true; //表示此位置为一种赢法 } count++; } } //竖线赢法 for (var row = 0; row < 15; row++) { for (var col = 0; col < 11; col++) { for (var k = 0; k < 5; k++) { wins[col + k][row][count] = true; } count++; } } //正斜线赢法 for (var row = 0; row < 11; row++) { for (var col = 0; col < 11; col++) { for (var k = 0; k < 5; k++) { wins[row + k][col + k][count] = true; } count++; } } //反斜线赢法 for (var row = 0; row < 11; row++) { for (var col = 14; col > 3; col--) { for (var k = 0; k < 5; k++) { wins[row + k][col - k][count] = true; } count++; } } console.log(count); //测试 for (var i = 0; i < count; i++) { myWin[i] = 0; _myWin[i] = 0; computerWin[i] = 0; _compWin[i] = 0; } //我，下棋 chess.onclick = function (e) { if (over) { return; } if (!me) { return; } backbtn.className = backbtn.className.replace( new RegExp('(\\\\s|^)unable(\\\\s|$)'), ' ' ); var x = e.offsetX; var y = e.offsetY; //获取点击坐标 var i = Math.floor(x / 30); //向下取整 var j = Math.floor(y / 30); _nowi = i; _nowj = j; if (chressBord[i][j] == 0) { oneStep(i, j, me); chressBord[i][j] = 1; //我，已占位置 for (var k = 0; k < count; k++) { // 将可能赢的情况都加1 if (wins[i][j][k]) { // debugger; myWin[k]++; _compWin[k] = computerWin[k]; computerWin[k] = 6; //这个位置对方不可能赢了 if (myWin[k] === 5 || myWin[k] === 6) { // window.alert('你赢了'); resultTxt.innerHTML = '恭喜，你赢了！'; alert('这也行，真是高手啊！居然战胜了bug，我还真是小瞧你了'); over = true; //设置游戏结束 } } } if (!over) { me = !me; computerAI(); } } }; // 悔棋 backbtn.onclick = function (e) { if (!backAble) { return; } over = false; me = true; // resultTxt.innerHTML = 'o(╯□╰)o，悔棋中'; // 我，悔棋 chressBord[_nowi][_nowj] = 0; //我，已占位置 还原 minusStep(_nowi, _nowj); //销毁棋子 for (var k = 0; k < count; k++) { // 将可能赢的情况都减1 if (wins[_nowi][_nowj][k]) { myWin[k]--; computerWin[k] = _compWin[k]; //这个位置对方可能赢 } } // 计算机相应的悔棋 chressBord[_compi][_compj] = 0; //计算机，已占位置 还原 minusStep(_compi, _compj); //销毁棋子 for (var k = 0; k < count; k++) { // 将可能赢的情况都减1 if (wins[_compi][_compj][k]) { computerWin[k]--; myWin[k] = _myWin[i]; //这个位置对方可能赢 } } resultTxt.innerHTML = '--益智五子棋--'; returnAble = true; backAble = false; }; var computerAI = function () { //创建变量来统计整个棋盘中没有落子的点的分数 var myScore = []; var computerScore = []; var max = 0; //记录最高分 var u = 0, v = 0; //最高分的坐标 for (var i = 0; i < 15; i++) { myScore[i] = []; computerScore[i] = []; for (var j = 0; j < 15; j++) { myScore[i][j] = 0; //设置初始分数为0 computerScore[i][j] = 0; } } //统计没有落子的点的分数 for (var i = 0; i < 15; i++) { for (var j = 0; j < 15; j++) { if (chressBord[i][j] == 0) { //如果这个坐标为空 //遍历所有的赢法，查找与这个坐标相关的所有赢法 for (var k = 0; k < count; k++) { if (wins[i][j][k]) { //如果这是一种赢法 //判断玩家已经在这个赢法上落了几颗子然后在此位置加上相应的分数 if (myWin[k] == 1) { myScore[i][j] += 200; } else if (myWin[k] == 2) { myScore[i][j] += 400; } else if (myWin[k] == 3) { myScore[i][j] += 2000; } else if (myWin[k] == 4) { myScore[i][j] += 15000; } //计算电脑分数 if (computerWin[k] == 1) { computerScore[i][j] += 220; } else if (computerWin[k] == 2) { computerScore[i][j] += 420; } else if (computerWin[k] == 3) { computerScore[i][j] += 2100; } else if (computerWin[k] == 4) { computerScore[i][j] += 20000; } } } //判断当前储存的最大分数是否确实是最大的 if (myScore[i][j] > max) { //如果玩家当前分数大于之前储存的最大值 max = myScore[i][j]; //更新最大分数 //记录坐标开堵 u = i; v = j; } else if (myScore[i][j] == max) { //如果玩家当前分数等于之前储存的最大值 //判断当前点的电脑分数是否比之前的记录电脑分数高 if (computerScore[i][j] > computerScore[u][v]) { //记录坐标开杀 u = i; v = j; } } //如果电脑当前分数大于之前储存的最大值 if (computerScore[i][j] > max) { //如果电脑当前分数大于之前储存的最大值 max = computerScore[i][j]; //开杀 u = i; v = j; } else if (computerScore[i][j] == max) { //判断当前点的玩家分数是否比之前记录的玩家分数高 if (myScore[i][j] > myScore[u][v]) { //开堵 u = i; v = j; } } } } } _compi = u; _compj = v; oneStep(u, v, false); chressBord[u][v] = 2; //计算机占据位置 for (var k = 0; k < count; k++) { if (wins[u][v][k]) { computerWin[k]++; _myWin[k] = myWin[k]; myWin[k] = 6; //这个位置对方不可能赢了 if (computerWin[k] == 5) { resultTxt.innerHTML = 'o(╯□╰)o，计算机赢了，继续加油哦！'; alert('计算机赢了，你个辣鸡，左下角remake吧！'); over = true; } } } if (!over) { me = !me; } backAble = true; }; //绘画棋盘 var drawChessBoard = function () { for (var i = 0; i < 15; i++) { context.moveTo(15 + i * 30, 15); //起始坐标 context.lineTo(15 + i * 30, 435); //结束坐标 context.stroke(); //连线 context.moveTo(15, 15 + i * 30); context.lineTo(435, 15 + i * 30); context.stroke(); } }; //画棋子 var oneStep = function (i, j, me) { context.beginPath(); context.arc(15 + i * 30, 15 + j * 30, 13, 0, 2 * Math.PI); // 画圆 context.closePath(); //渐变 var gradient = context.createRadialGradient( 15 + i * 30 + 2, 15 + j * 30 - 2, 13, 15 + i * 30 + 2, 15 + j * 30 - 2, 0 ); if (me) { gradient.addColorStop(0, '#0a0a0a'); gradient.addColorStop(1, '#636766'); } else { gradient.addColorStop(0, '#d1d1d1'); gradient.addColorStop(1, '#f9f9f9'); } context.fillStyle = gradient; context.fill(); }; //销毁棋子 var minusStep = function (i, j) { //擦除该圆 context.clearRect(i * 30, j * 30, 30, 30); // 重画该圆周围的格子 context.beginPath(); context.moveTo(15 + i * 30, j * 30); context.lineTo(15 + i * 30, j * 30 + 30); context.stroke(); context.moveTo(i * 30, j * 30 + 15); context.lineTo((i + 1) * 30, j * 30 + 15); context.stroke(); };"},{"title":"","date":"2023-02-12T15:36:36.139Z","updated":"2023-02-12T15:36:36.139Z","comments":true,"path":"HTML/game/index.html","permalink":"http://yoursite.com/HTML/game/index.html","excerpt":"","text":"2048 2048 0 0 Join the numbers and get to the 2048 tile! New Game Keep going Try again How to play: Use your arrow keys to move the tiles. When two tiles with the same number touch, they merge into one! Note: This site is the official version of 2048. You can play it on your phone via http://git.io/2048. All other apps or sites are derivatives or fakes, and should be used with caution. Created by Gabriele Cirulli. Based on 1024 by Veewo Studio and conceptually similar to Threes by Asher Vollmer."}],"posts":[],"categories":[],"tags":[]}